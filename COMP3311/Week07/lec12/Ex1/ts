#!/usr/bin/python3
# COMP3311 21T3 Ass2 ... print a transcript for a given student

import sys
import psycopg2
import re
from helpers import getStudent

# define any local helper functions here

### set up some globals

usage = f"Usage: {sys.argv[0]} zID"
db = None

### process command-line args

argc = len(sys.argv)
if argc < 2:
  print(usage)
  exit(1)
zid = sys.argv[1]
if zid[0] == 'z':
  zid = zid[1:8]
digits = re.compile("^\d{7}$")
if not digits.match(zid):
  print(f"Invalid student ID {zid}")
  exit(1)

# manipulate database

try:
  db = psycopg2.connect("dbname=uni")
  stuInfo = getStudent(db,zid)
  if not stuInfo:
    print(f"Unknown student ID {zid}")
    exit()

  #print(stuInfo) # debug
  print(f"{stuInfo[0]} {stuInfo[1]}, {stuInfo[2]}")

  wsum = wamuoc = totuoc = 0
  cur = db.cursor()
  cur.execute("select * from ts(%s::integer)",[zid]);
  for t in cur.fetchall():
    code,term,title,mark,grade,uoc = t
    print(f"{code} {term} {title:<32s}",end="")
    if mark is None:
      if grade is None:
        print("  -   -")
      elif grade in ['SY','XE','T','EC','NC']:
        print(f"  - {grade:>2s}  {uoc:2d}uoc")
        totuoc = totuoc + uoc
      elif grade in ['AF']:
        print("  - AF   fail")
        wsum = wsum + 0
        wamuoc = wamuoc + uoc
      else:
        print(f"  - {grade:>2s}")
    else:
      print(f"{mark:>3d} {grade:2s}",end="")
      wamuoc = wamuoc + uoc
      if mark >= 50:
        wsum = wsum + uoc*mark
        if grade == 'UF':
          print("   fail")
        else:
          print(f"  {uoc:2d}uoc")
          totuoc = totuoc + uoc
      else:
        print("   fail")

  if wamuoc == 0:
    print("Can't compute WAM")
  else:
    print(f"UOC = {totuoc}, WAM = {wsum}/{wamuoc} = {wsum/wamuoc:.1f}")

except Exception as err:
  print("DB error: ", err)
finally:
  if db:
    db.close()

